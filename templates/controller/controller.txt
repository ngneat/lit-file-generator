import { ReactiveController, ReactiveControllerHost } from 'lit';

export class {{ pascalCase name }}Controller implements ReactiveController {
  value = new Date();
  timeout: number;
  private timerID: any;

  constructor(private host: ReactiveControllerHost, timeout = 1000) {
    this.host.addController(this);
    this.timeout = timeout;
  }

  hostConnected() {
    // Start a timer when the host is connected
    this.timerID = setInterval(() => {
      this.value = new Date();

      // Update the host with new value
      this.host.requestUpdate();
    }, this.timeout);
  }

  hostDisconnected() {
    // Clear the timer when the host is disconnected
    clearInterval(this.timerID);

    this.timerID = undefined;
  }
}